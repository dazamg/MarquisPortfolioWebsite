{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport const getPortfolio = () => {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    async function getPosts() {\n      const res = await fetch('/api/v1/posts');\n      const result = await res.json();\n\n      if (res.status !== 200) {\n        setError(result);\n      } else {\n        setPosts(result);\n      }\n\n      setLoading();\n      console.log(\"!@@@@@\", result);\n    }\n\n    getPosts();\n  }, []);\n  return {\n    posts,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/kishonst.clair/Desktop/PortfolioWebsite/kishon-portfolio-website/functions/index.js"],"names":["useEffect","useState","getPortfolio","posts","setPosts","error","setError","loading","setLoading","getPosts","res","fetch","result","json","status","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,QAAf,GAA0B;AACtB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,eAAD,CAAvB;AACA,YAAMC,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAArB;;AAEA,UAAGH,GAAG,CAACI,MAAJ,KAAe,GAAlB,EAAuB;AACnBR,QAAAA,QAAQ,CAACM,MAAD,CAAR;AACH,OAFD,MAEO;AACJR,QAAAA,QAAQ,CAACQ,MAAD,CAAR;AACF;;AACDJ,MAAAA,UAAU;AACVO,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACH;;AACDH,IAAAA,QAAQ;AACX,GAdQ,EAcN,EAdM,CAAT;AAeA,SAAO;AAAEN,IAAAA,KAAF;AAASE,IAAAA;AAAT,GAAP;AACH,CApBM","sourcesContent":["import  {useEffect, useState } from 'react';\n\nexport const getPortfolio = () => {\n    const [posts, setPosts] = useState([])\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        async function getPosts() {\n            const res = await fetch('/api/v1/posts')\n            const result = await res.json();\n\n            if(res.status !== 200) {\n                setError(result)\n            } else {\n               setPosts(result) \n            }\n            setLoading()\n            console.log(\"!@@@@@\", result)\n        }\n        getPosts()\n    }, [])\n    return { posts, error }\n}"]},"metadata":{},"sourceType":"module"}