{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const fetcher = url => fetch(url).then(async res => {\n  const result = await res.json();\n\n  if (res.status !== 200) {\n    return Promise.reject(result);\n  } else {\n    return result;\n  }\n});\nexport function useApiHandlerapiCall() {\n  const [reqState, setReqState] = useState({\n    error: null,\n    data: null,\n    loading: false\n  });\n\n  const handler = async (...data) => {\n    setReqState({\n      error: null,\n      data: null,\n      loading: true\n    });\n\n    try {\n      const json = await createPortfolio(...data);\n      debugger;\n      setReqState({\n        error: null,\n        data: json.data,\n        loading: false\n      });\n    } catch (e) {\n      debugger;\n      const message = e.response && e.response.message || 'Ooops, something went wrong...';\n      setReqState({\n        error: message,\n        data: null,\n        loading: false\n      });\n    }\n  };\n\n  return [createPortfolioHandler, _objectSpread({}, reqState)];\n}","map":{"version":3,"sources":["/Users/kishonst.clair/Desktop/PortfolioWebsite/kishon-portfolio-website/functions/index.js"],"names":["fetcher","url","fetch","then","res","result","json","status","Promise","reject","useApiHandlerapiCall","reqState","setReqState","useState","error","data","loading","handler","createPortfolio","e","message","response","createPortfolioHandler"],"mappings":";;;;;;AAEA,OAAO,MAAMA,OAAO,GAAIC,GAAD,IACvBC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,MAAMC,GAAN,IAAa;AACzB,QAAMC,MAAM,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAArB;;AAEA,MAAGF,GAAG,CAACG,MAAJ,KAAe,GAAlB,EAAuB;AACnB,WAAOC,OAAO,CAACC,MAAR,CAAeJ,MAAf,CAAP;AACH,GAFD,MAEO;AACH,WAAOA,MAAP;AACH;AACJ,CARD,CADO;AAWP,OAAO,SAASK,oBAAT,GAAgC;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC;AACvCC,IAAAA,KAAK,EAAE,IADgC;AAEvCC,IAAAA,IAAI,EAAE,IAFiC;AAGvCC,IAAAA,OAAO,EAAE;AAH8B,GAAD,CAAxC;;AAMA,QAAMC,OAAO,GAAG,OAAO,GAAGF,IAAV,KAAmB;AACjCH,IAAAA,WAAW,CAAC;AAACE,MAAAA,KAAK,EAAE,IAAR;AAAcC,MAAAA,IAAI,EAAE,IAApB;AAA0BC,MAAAA,OAAO,EAAE;AAAnC,KAAD,CAAX;;AACA,QAAI;AACF,YAAMV,IAAI,GAAG,MAAMY,eAAe,CAAC,GAAGH,IAAJ,CAAlC;AACA;AACAH,MAAAA,WAAW,CAAC;AAACE,QAAAA,KAAK,EAAE,IAAR;AAAcC,QAAAA,IAAI,EAAET,IAAI,CAACS,IAAzB;AAA+BC,QAAAA,OAAO,EAAE;AAAxC,OAAD,CAAX;AACD,KAJD,CAIE,OAAMG,CAAN,EAAS;AACT;AACA,YAAMC,OAAO,GAAID,CAAC,CAACE,QAAF,IAAcF,CAAC,CAACE,QAAF,CAAWD,OAA1B,IAAsC,gCAAtD;AACAR,MAAAA,WAAW,CAAC;AAACE,QAAAA,KAAK,EAAEM,OAAR;AAAiBL,QAAAA,IAAI,EAAE,IAAvB;AAA6BC,QAAAA,OAAO,EAAE;AAAtC,OAAD,CAAX;AACD;AACF,GAXD;;AAaA,SAAO,CAACM,sBAAD,oBAA6BX,QAA7B,EAAP;AACH","sourcesContent":["\n\nexport const fetcher = (url) => \nfetch(url).then(async res => {\n    const result = await res.json();\n\n    if(res.status !== 200) {\n        return Promise.reject(result);\n    } else {\n        return result;\n    }\n})\n\nexport function useApiHandlerapiCall() {\n    const [reqState, setReqState] = useState({\n      error: null,\n      data: null,\n      loading: false\n    });\n  \n    const handler = async (...data) => {\n      setReqState({error: null, data: null, loading: true});\n      try {\n        const json = await createPortfolio(...data);\n        debugger\n        setReqState({error: null, data: json.data, loading: false});\n      } catch(e) {\n        debugger\n        const message = (e.response && e.response.message) || 'Ooops, something went wrong...';\n        setReqState({error: message, data: null, loading: false});\n      }\n    }\n  \n    return [createPortfolioHandler, {...reqState}]\n}\n"]},"metadata":{},"sourceType":"module"}