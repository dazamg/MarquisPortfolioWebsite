{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { useState } from 'react';\n\nfunction createPortfolio(data) {\n  return axios.post('/api/v1/portfolios', data);\n}\n\nexport function useCreatePortfolio() {\n  const {\n    0: reqState,\n    1: setReqState\n  } = useState({\n    error: null,\n    data: null,\n    loading: false\n  });\n\n  const createPortfolioHandler = async (...data) => {\n    setReqState({\n      error: null,\n      data: null,\n      loading: true\n    });\n\n    try {\n      const json = await createPortfolio(...data);\n      debugger;\n      setReqState({\n        error: null,\n        data: json.data,\n        loading: false\n      });\n    } catch (e) {\n      debugger;\n      const message = e.response && e.response.message || 'Ooops, something went wrong...';\n      setReqState({\n        error: message,\n        data: null,\n        loading: false\n      });\n    }\n  };\n\n  return [createPortfolioHandler, _objectSpread({}, reqState)];\n}","map":{"version":3,"sources":["/Users/kishonst.clair/Desktop/PortfolioWebsite/kishon-portfolio-website/functions/portfolios.js"],"names":["axios","useState","createPortfolio","data","post","useCreatePortfolio","reqState","setReqState","error","loading","createPortfolioHandler","json","e","message","response"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,SAAOH,KAAK,CAACI,IAAN,CAAW,oBAAX,EAAiCD,IAAjC,CAAP;AACD;;AAGD,OAAO,SAASE,kBAAT,GAA8B;AACnC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC;AACvCO,IAAAA,KAAK,EAAE,IADgC;AAEvCL,IAAAA,IAAI,EAAE,IAFiC;AAGvCM,IAAAA,OAAO,EAAE;AAH8B,GAAD,CAAxC;;AAMA,QAAMC,sBAAsB,GAAG,OAAO,GAAGP,IAAV,KAAmB;AAChDI,IAAAA,WAAW,CAAC;AAACC,MAAAA,KAAK,EAAE,IAAR;AAAcL,MAAAA,IAAI,EAAE,IAApB;AAA0BM,MAAAA,OAAO,EAAE;AAAnC,KAAD,CAAX;;AACA,QAAI;AACF,YAAME,IAAI,GAAG,MAAMT,eAAe,CAAC,GAAGC,IAAJ,CAAlC;AACA;AACAI,MAAAA,WAAW,CAAC;AAACC,QAAAA,KAAK,EAAE,IAAR;AAAcL,QAAAA,IAAI,EAAEQ,IAAI,CAACR,IAAzB;AAA+BM,QAAAA,OAAO,EAAE;AAAxC,OAAD,CAAX;AACD,KAJD,CAIE,OAAMG,CAAN,EAAS;AACT;AACA,YAAMC,OAAO,GAAID,CAAC,CAACE,QAAF,IAAcF,CAAC,CAACE,QAAF,CAAWD,OAA1B,IAAsC,gCAAtD;AACAN,MAAAA,WAAW,CAAC;AAACC,QAAAA,KAAK,EAAEK,OAAR;AAAiBV,QAAAA,IAAI,EAAE,IAAvB;AAA6BM,QAAAA,OAAO,EAAE;AAAtC,OAAD,CAAX;AACD;AACF,GAXD;;AAaA,SAAO,CAACC,sBAAD,oBAA6BJ,QAA7B,EAAP;AACD","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\n\nfunction createPortfolio(data) {\n  return axios.post('/api/v1/portfolios', data);\n}\n\n\nexport function useCreatePortfolio() {\n  const [reqState, setReqState] = useState({\n    error: null,\n    data: null,\n    loading: false\n  });\n\n  const createPortfolioHandler = async (...data) => {\n    setReqState({error: null, data: null, loading: true});\n    try {\n      const json = await createPortfolio(...data);\n      debugger\n      setReqState({error: null, data: json.data, loading: false});\n    } catch(e) {\n      debugger\n      const message = (e.response && e.response.message) || 'Ooops, something went wrong...';\n      setReqState({error: message, data: null, loading: false});\n    }\n  }\n\n  return [createPortfolioHandler, {...reqState}]\n}"]},"metadata":{},"sourceType":"module"}