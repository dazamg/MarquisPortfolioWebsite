{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport useSWR from 'swr';\nexport const fetcher = url => fetch(url).then(async res => {\n  const result = await res.json();\n\n  if (res.status !== 200) {\n    return Promise.reject(result);\n  } else {\n    return result;\n  }\n});\nexport const getPortfolio = () => {\n  const _useSWR = useSWR('/api/v1/posts', fetcher),\n        {\n    data,\n    error\n  } = _useSWR,\n        rest = _objectWithoutProperties(_useSWR, [\"data\", \"error\"]);\n\n  return _objectSpread({\n    data,\n    error,\n    loading: !data && !error\n  }, rest);\n};\nexport const getPortfolioById = id => {\n  const _useSWR2 = useSWR(id ? `/api/v1/posts/${id}` : null, fetcher),\n        {\n    data,\n    error\n  } = _useSWR2,\n        rest = _objectWithoutProperties(_useSWR2, [\"data\", \"error\"]);\n\n  return _objectSpread({\n    data,\n    error,\n    loading: !data && !error\n  }, rest);\n};","map":{"version":3,"sources":["/Users/kishonst.clair/Desktop/PortfolioWebsite/kishon-portfolio-website/functions/index.js"],"names":["useSWR","fetcher","url","fetch","then","res","result","json","status","Promise","reject","getPortfolio","data","error","rest","loading","getPortfolioById","id"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AAEA,OAAO,MAAMC,OAAO,GAAIC,GAAD,IACvBC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,MAAMC,GAAN,IAAa;AACzB,QAAMC,MAAM,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAArB;;AAEA,MAAGF,GAAG,CAACG,MAAJ,KAAe,GAAlB,EAAuB;AACnB,WAAOC,OAAO,CAACC,MAAR,CAAeJ,MAAf,CAAP;AACH,GAFD,MAEO;AACH,WAAOA,MAAP;AACH;AACJ,CARD,CADO;AAWP,OAAO,MAAMK,YAAY,GAAG,MAAM;AAC9B,kBAA+BX,MAAM,CAAC,eAAD,EAAkBC,OAAlB,CAArC;AAAA,QAAM;AAACW,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAN;AAAA,QAAuBC,IAAvB;;AACA;AAAQF,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqBE,IAAAA,OAAO,EAAE,CAACH,IAAD,IAAS,CAACC;AAAxC,KAAkDC,IAAlD;AACH,CAHM;AAMP,OAAO,MAAME,gBAAgB,GAAIC,EAAD,IAAQ;AACpC,mBAA+BjB,MAAM,CAACiB,EAAE,GAAI,iBAAgBA,EAAG,EAAvB,GAA2B,IAA9B,EAAoChB,OAApC,CAArC;AAAA,QAAM;AAACW,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAN;AAAA,QAAuBC,IAAvB;;AACA;AAAQF,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqBE,IAAAA,OAAO,EAAE,CAACH,IAAD,IAAS,CAACC;AAAxC,KAAkDC,IAAlD;AACH,CAHM","sourcesContent":["import useSWR from 'swr'\n\nexport const fetcher = (url) => \nfetch(url).then(async res => {\n    const result = await res.json();\n\n    if(res.status !== 200) {\n        return Promise.reject(result);\n    } else {\n        return result;\n    }\n})\n\nexport const getPortfolio = () => {\n    const {data, error, ...rest} = useSWR('/api/v1/posts', fetcher);\n    return {data, error, loading: !data && !error, ...rest}\n}\n\n\nexport const getPortfolioById = (id) => {\n    const {data, error, ...rest} = useSWR(id ? `/api/v1/posts/${id}` : null, fetcher);\n    return {data, error, loading: !data && !error, ...rest}\n}\n"]},"metadata":{},"sourceType":"module"}