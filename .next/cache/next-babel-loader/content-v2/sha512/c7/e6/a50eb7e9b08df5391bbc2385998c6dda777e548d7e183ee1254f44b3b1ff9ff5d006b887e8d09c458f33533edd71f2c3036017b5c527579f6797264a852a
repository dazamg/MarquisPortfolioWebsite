{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useGetUser } from '@/functions/user';\nimport Redirect from '@/components/shared/Redirect';\nimport { isAuthorized } from '@/utils/auth0';\n\nconst withAuth = Component => role => {\n  return props => {\n    const {\n      data,\n      loading\n    } = useGetUser();\n\n    if (loading) {\n      return /*#__PURE__*/_jsx(\"p\", {\n        children: \"Loading...\"\n      });\n    }\n\n    if (!data) {\n      return /*#__PURE__*/_jsx(Redirect, {\n        ssr: true,\n        to: \"/api/v1/login\"\n      });\n    } else {\n      if (role && !isAuthorized(data, role)) {\n        return /*#__PURE__*/_jsx(Redirect, {\n          ssr: true,\n          to: \"/api/v1/login\"\n        });\n      }\n\n      return /*#__PURE__*/_jsx(Component, _objectSpread({\n        user: data,\n        loading: loading\n      }, props));\n    }\n  };\n};\n\nexport default withAuth;","map":null,"metadata":{},"sourceType":"module"}