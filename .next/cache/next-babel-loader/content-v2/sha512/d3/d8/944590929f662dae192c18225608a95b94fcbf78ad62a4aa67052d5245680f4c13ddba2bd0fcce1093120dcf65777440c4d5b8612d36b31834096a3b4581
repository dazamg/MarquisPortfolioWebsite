{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kishonst.clair/Desktop/PortfolioWebsite/kishon-portfolio-website/pages/portfolios/index.js\";\nimport { useState } from 'react';\nimport BaseLayout from '@/components/layouts/BaseLayout';\nimport BasePage from '@/components/BasePage';\nimport Link from 'next/link';\nimport { useGetUser } from '@/functions/user';\nimport { useDeletePortfolio } from '@/functions/portfolios';\nimport PortfolioApi from '@/serv/api/portfolios';\nimport { Row, Col, Button } from 'reactstrap';\nimport PortfolioCard from '@/components/PortfolioCard';\nimport { useRouter } from 'next/router';\nimport { isAuthorized } from '@/utils/auth0';\n\nconst Portfolios = ({\n  portfolios: initialPortfolio\n}) => {\n  const router = useRouter();\n  const [deletePortfolio, {\n    data,\n    error\n  }] = useDeletePortfolio();\n  const {\n    data: dataU,\n    loading: loadingU\n  } = useGetUser();\n  const {\n    0: portfolios,\n    1: setPortfolios\n  } = useState(initialPortfolio);\n\n  const _deletePortfolio = async (e, portfolioId) => {\n    e.stopPropagation(); // const isConfirm = confirm('Are you sure you want to delete this portfolio?')\n    // if(isConfirm) {\n    //   await deletePortfolio(portfolioId)\n    // }\n\n    const newPortfolios = portfolios.filter(portfolio => portfolio._id !== portfolioId);\n    setPortfolios(newPortfolios);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BaseLayout, {\n    user: dataU,\n    loading: loadingU,\n    children: /*#__PURE__*/_jsxDEV(BasePage, {\n      header: \"Portfolios\",\n      className: \"portfolio-page\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: portfolios.map(portfolio => /*#__PURE__*/_jsxDEV(Col, {\n          onClick: () => {\n            router.push('/portfolios/[id]', `/portfolios/${portfolio._id}`);\n          },\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(PortfolioCard, {\n            portfolio: portfolio,\n            children: dataU && isAuthorized(dataU, 'admin') && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: e => {\n                  e.stopPropagation();\n                  router.push('/portfolios/[id]/edit', `/portfolios/${portfolio._id}/edit`);\n                },\n                className: \"mr-2\",\n                color: \"warning\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: e => _deletePortfolio(e, portfolio._id),\n                color: \"danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, portfolio._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const json = await new PortfolioApi().getAll();\n  const portfolios = json.data;\n  return {\n    props: {\n      portfolios\n    }\n  };\n}\nexport default Portfolios;","map":{"version":3,"sources":["/Users/kishonst.clair/Desktop/PortfolioWebsite/kishon-portfolio-website/pages/portfolios/index.js"],"names":["useState","BaseLayout","BasePage","Link","useGetUser","useDeletePortfolio","PortfolioApi","Row","Col","Button","PortfolioCard","useRouter","isAuthorized","Portfolios","portfolios","initialPortfolio","router","deletePortfolio","data","error","dataU","loading","loadingU","setPortfolios","_deletePortfolio","e","portfolioId","stopPropagation","newPortfolios","filter","portfolio","_id","map","push","getStaticProps","json","getAll","props"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport BaseLayout from '@/components/layouts/BaseLayout';\nimport BasePage from '@/components/BasePage';\nimport Link from 'next/link';\nimport { useGetUser } from '@/functions/user';\nimport { useDeletePortfolio } from '@/functions/portfolios';\nimport PortfolioApi from '@/serv/api/portfolios';\nimport { Row, Col, Button} from 'reactstrap';\nimport PortfolioCard from '@/components/PortfolioCard'\nimport { useRouter} from 'next/router';\nimport { isAuthorized } from '@/utils/auth0'\n\nconst Portfolios = ({portfolios: initialPortfolio}) => {\n  const router = useRouter();\n  const [deletePortfolio, {data, error}] = useDeletePortfolio();\n  const { data: dataU, loading: loadingU } = useGetUser();\n  const [ portfolios, setPortfolios] = useState(initialPortfolio);\n\n  const _deletePortfolio = async(e, portfolioId) => {\n    e.stopPropagation();\n    // const isConfirm = confirm('Are you sure you want to delete this portfolio?')\n    // if(isConfirm) {\n    //   await deletePortfolio(portfolioId)\n    // }\n    const newPortfolios = portfolios.filter((portfolio) => portfolio._id !== portfolioId)\n    setPortfolios(newPortfolios);\n\n  }\n\n  return (\n    <BaseLayout user={dataU} loading={loadingU}>\n      <BasePage\n        header=\"Portfolios\"\n        className=\"portfolio-page\">\n        <Row>\n          { portfolios.map(portfolio =>\n            <Col\n              key={portfolio._id}\n              onClick={() => {\n                router.push('/portfolios/[id]', `/portfolios/${portfolio._id}`)\n              }}\n              md=\"4\">\n              <PortfolioCard\n                portfolio={portfolio}>\n                { dataU && isAuthorized(dataU, 'admin') &&\n                  <>\n                    <Button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        router.push('/portfolios/[id]/edit', `/portfolios/${portfolio._id}/edit`)\n                      }}\n                      className=\"mr-2\"\n                      color=\"warning\">Edit</Button>\n                    <Button \n                      onClick={(e) =>_deletePortfolio(e, portfolio._id)}\n                      color=\"danger\">Delete</Button>\n                  </>\n                }\n              </PortfolioCard>\n            </Col>\n            )\n          }\n        </Row>\n      </BasePage>\n    </BaseLayout>\n  )\n}\n\nexport async function getStaticProps() {\n  const json = await new PortfolioApi().getAll();\n  const portfolios = json.data;\n  return {\n    props: { portfolios }\n  }\n}\n\nexport default Portfolios;"]},"metadata":{},"sourceType":"module"}