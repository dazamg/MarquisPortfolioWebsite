{"ast":null,"code":"import axios from 'axios';\n\nclass PortfolioApi {\n  constructor(accessToken) {\n    this.config = {};\n\n    if (accessToken) {\n      this.config.headers = {\n        authorization: `Bearer ${accessToken}`\n      };\n    }\n\n    this.apiUrl = process.env.PORTFOLIO_API_URL + '/portfolios';\n  }\n\n  getById(id) {\n    return axios.get(`${this.apiUrl}/${id}`);\n  }\n\n  getAll() {\n    return axios.get(this.apiUrl);\n  }\n\n  getById(id) {\n    return axios.get(`${this.apiUrl}/${id}`);\n  }\n\n  createPortfolio(data) {\n    return axios.post(this.apiUrl, data, this.config);\n  }\n\n  update(id, data) {\n    return axios.patch(`${this.apiUrl}/${id}`, data, this.config);\n  }\n\n}\n\nexport default PortfolioApi;","map":{"version":3,"sources":["/Users/kishonst.clair/Desktop/PortfolioWebsite/kishon-portfolio-website/serv/api/portfolios.js"],"names":["axios","PortfolioApi","constructor","accessToken","config","headers","authorization","apiUrl","process","env","PORTFOLIO_API_URL","getById","id","get","getAll","createPortfolio","data","post","update","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,CAAmB;AAEjBC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACvB,SAAKC,MAAL,GAAc,EAAd;;AAEA,QAAID,WAAJ,EAAiB;AACf,WAAKC,MAAL,CAAYC,OAAZ,GAAsB;AACpBC,QAAAA,aAAa,EAAG,UAASH,WAAY;AADjB,OAAtB;AAGD;;AAED,SAAKI,MAAL,GAAcC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,aAA9C;AACD;;AAEDC,EAAAA,OAAO,CAACC,EAAD,EAAK;AACV,WAAOZ,KAAK,CAACa,GAAN,CAAW,GAAE,KAAKN,MAAO,IAAGK,EAAG,EAA/B,CAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAOd,KAAK,CAACa,GAAN,CAAU,KAAKN,MAAf,CAAP;AACD;;AAEDI,EAAAA,OAAO,CAACC,EAAD,EAAK;AACV,WAAOZ,KAAK,CAACa,GAAN,CAAW,GAAE,KAAKN,MAAO,IAAGK,EAAG,EAA/B,CAAP;AACD;;AAEDG,EAAAA,eAAe,CAACC,IAAD,EAAO;AACpB,WAAOhB,KAAK,CAACiB,IAAN,CAAW,KAAKV,MAAhB,EAAwBS,IAAxB,EAA8B,KAAKZ,MAAnC,CAAP;AACD;;AAEDc,EAAAA,MAAM,CAACN,EAAD,EAAKI,IAAL,EAAW;AACf,WAAOhB,KAAK,CAACmB,KAAN,CAAa,GAAE,KAAKZ,MAAO,IAAGK,EAAG,EAAjC,EAAoCI,IAApC,EAA0C,KAAKZ,MAA/C,CAAP;AACD;;AAhCgB;;AAmCnB,eAAeH,YAAf","sourcesContent":["import axios from 'axios';\n\nclass PortfolioApi {\n\n  constructor(accessToken) {\n    this.config = {}\n\n    if (accessToken) {\n      this.config.headers = {\n        authorization: `Bearer ${accessToken}`\n      }\n    }\n\n    this.apiUrl = process.env.PORTFOLIO_API_URL + '/portfolios';\n  }\n\n  getById(id) {\n    return axios.get(`${this.apiUrl}/${id}`);\n  }\n\n  getAll() {\n    return axios.get(this.apiUrl)\n  }\n\n  getById(id) {\n    return axios.get(`${this.apiUrl}/${id}`)\n  }\n\n  createPortfolio(data) {\n    return axios.post(this.apiUrl, data, this.config);\n  }\n\n  update(id, data) {\n    return axios.patch(`${this.apiUrl}/${id}`, data, this.config);\n  }\n}\n\nexport default PortfolioApi;\n"]},"metadata":{},"sourceType":"module"}