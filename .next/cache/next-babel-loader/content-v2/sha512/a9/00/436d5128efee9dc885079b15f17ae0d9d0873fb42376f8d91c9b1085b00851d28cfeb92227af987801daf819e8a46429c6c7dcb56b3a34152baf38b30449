{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kishonst.clair/Desktop/PortfolioWebsite/kishon-portfolio-website/pages/portfolios/[id].js\";\nimport BaseLayout from \"@/components/layouts/BaseLayout\";\nimport BasePage from \"@/components/BasePage\";\nimport { useGetUser } from '@/functions/user';\nimport PortfolioApi from '@/serv/api/portfolios';\n\nconst Portfolio = ({\n  portfolio\n}) => {\n  const {\n    data: dataU,\n    loading: loadingU\n  } = useGetUser();\n  return /*#__PURE__*/_jsxDEV(BaseLayout, {\n    user: dataU,\n    loading: loadingU,\n    children: /*#__PURE__*/_jsxDEV(BasePage, {\n      header: \"Portfolio Detail\",\n      children: JSON.stringify(portfolio)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}; // export async function getServerSideProps({query}) {\n//   const json = await new PortfolioApi().getById(query.id);\n//   const portfolio = json.data;\n//   return {props: { portfolio }};\n// }\n// This function is executed at the build time\n\n\nexport async function getStaticPaths() {\n  const json = await new PortfolioApi().getAll();\n  const portfolios = json.data; // Get the paths we want pre-render based on portfolio ID\n\n  const paths = portfolios.map(portfolio => {\n    return {\n      params: {\n        id: portfolio._id\n      }\n    };\n  }); // fallback: false means that \"not found pages\" will be resolved into 404 page\n\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const json = await new PortfolioApi().getById(params.id);\n  const portfolio = json.data;\n  return {\n    props: {\n      portfolio\n    }\n  };\n}\nexport default Portfolio;","map":{"version":3,"sources":["/Users/kishonst.clair/Desktop/PortfolioWebsite/kishon-portfolio-website/pages/portfolios/[id].js"],"names":["BaseLayout","BasePage","useGetUser","PortfolioApi","Portfolio","portfolio","data","dataU","loading","loadingU","JSON","stringify","getStaticPaths","json","getAll","portfolios","paths","map","params","id","_id","fallback","getStaticProps","getById","props"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,iCAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AACjC,QAAM;AAAEC,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA,OAAO,EAAEC;AAAxB,MAAqCP,UAAU,EAArD;AAEA,sBACE,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEK,KAAlB;AAAyB,IAAA,OAAO,EAAEE,QAAlC;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAC,kBAAjB;AAAA,gBAEIC,IAAI,CAACC,SAAL,CAAeN,SAAf;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZD,C,CAcA;AACA;AACA;AAEA;AACA;AAEA;;;AACA,OAAO,eAAeO,cAAf,GAAgC;AACrC,QAAMC,IAAI,GAAG,MAAM,IAAIV,YAAJ,GAAmBW,MAAnB,EAAnB;AACA,QAAMC,UAAU,GAAGF,IAAI,CAACP,IAAxB,CAFqC,CAIrC;;AACA,QAAMU,KAAK,GAAGD,UAAU,CAACE,GAAX,CAAeZ,SAAS,IAAI;AACxC,WAAO;AACLa,MAAAA,MAAM,EAAE;AAACC,QAAAA,EAAE,EAAEd,SAAS,CAACe;AAAf;AADH,KAAP;AAGD,GAJa,CAAd,CALqC,CAWrC;;AACA,SAAO;AAAEJ,IAAAA,KAAF;AAASK,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAACJ,EAAAA;AAAD,CAA9B,EAAwC;AAC7C,QAAML,IAAI,GAAG,MAAM,IAAIV,YAAJ,GAAmBoB,OAAnB,CAA2BL,MAAM,CAACC,EAAlC,CAAnB;AACA,QAAMd,SAAS,GAAGQ,IAAI,CAACP,IAAvB;AACA,SAAO;AAAEkB,IAAAA,KAAK,EAAE;AAACnB,MAAAA;AAAD;AAAT,GAAP;AACD;AAED,eAAeD,SAAf","sourcesContent":["import BaseLayout from \"@/components/layouts/BaseLayout\"\nimport BasePage from \"@/components/BasePage\"\n\nimport { useGetUser } from '@/functions/user'\nimport PortfolioApi from '@/serv/api/portfolios'\n\nconst Portfolio = ({portfolio}) => {\n  const { data: dataU, loading: loadingU } = useGetUser();\n\n  return (\n    <BaseLayout user={dataU} loading={loadingU}>\n      <BasePage header=\"Portfolio Detail\">\n        {\n          JSON.stringify(portfolio)\n        }\n      </BasePage>\n    </BaseLayout>\n  )\n}\n\n// export async function getServerSideProps({query}) {\n//   const json = await new PortfolioApi().getById(query.id);\n//   const portfolio = json.data;\n\n//   return {props: { portfolio }};\n// }\n\n// This function is executed at the build time\nexport async function getStaticPaths() {\n  const json = await new PortfolioApi().getAll();\n  const portfolios = json.data;\n\n  // Get the paths we want pre-render based on portfolio ID\n  const paths = portfolios.map(portfolio => {\n    return {\n      params: {id: portfolio._id}\n    }\n  })\n\n  // fallback: false means that \"not found pages\" will be resolved into 404 page\n  return { paths, fallback: false };\n}\n\nexport async function getStaticProps({params}) {\n  const json = await new PortfolioApi().getById(params.id);\n  const portfolio = json.data;\n  return { props: {portfolio}};\n}\n\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}