{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport BaseLayout from \"@/components/layouts/BaseLayout\";\nimport BasePage from \"@/components/BasePage\";\nimport { useGetUser } from '@/functions/user';\nimport PortfolioApi from '@/serv/api/portfolios';\n\nconst Portfolio = ({\n  portfolio\n}) => {\n  const {\n    data: dataU,\n    loading: loadingU\n  } = useGetUser();\n  return /*#__PURE__*/_jsx(BaseLayout, {\n    user: dataU,\n    loading: loadingU,\n    children: /*#__PURE__*/_jsx(BasePage, {\n      header: \"Portfolio Detail\",\n      children: JSON.stringify(portfolio)\n    })\n  });\n}; // export async function getServerSideProps({query}) {\n//   const json = await new PortfolioApi().getById(query.id);\n//   const portfolio = json.data;\n//   return {props: { portfolio }};\n// }\n// This function is executed at the build time\n\n\nexport async function getStaticPaths() {\n  const json = await new PortfolioApi().getAll();\n  const portfolios = json.data; // Get the paths we want pre-render based on portfolio ID\n\n  const paths = portfolios.map(portfolio => {\n    return {\n      params: {\n        id: portfolio._id\n      }\n    };\n  }); // fallback: false means that \"not found pages\" will be resolved into 404 page\n\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const json = await new PortfolioApi().getById(params.id);\n  const portfolio = json.data;\n  return {\n    props: {\n      portfolio\n    }\n  };\n}\nexport default Portfolio;","map":null,"metadata":{},"sourceType":"module"}