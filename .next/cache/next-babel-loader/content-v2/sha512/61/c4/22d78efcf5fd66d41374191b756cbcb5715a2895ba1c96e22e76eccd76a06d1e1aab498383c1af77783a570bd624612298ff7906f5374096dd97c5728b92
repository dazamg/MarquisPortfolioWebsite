{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.detectLocaleCookie = detectLocaleCookie;\n\nfunction detectLocaleCookie(req, locales) {\n  var _ref = req.cookies || {},\n      NEXT_LOCALE = _ref.NEXT_LOCALE;\n\n  return NEXT_LOCALE ? locales.find(function (locale) {\n    return NEXT_LOCALE.toLowerCase() === locale.toLowerCase();\n  }) : undefined;\n}","map":{"version":3,"sources":["../../../../next-server/lib/i18n/detect-locale-cookie.ts"],"names":["req","NEXT_LOCALE","locales","locale"],"mappings":";;;;;AAEO,SAAA,kBAAA,CAAA,GAAA,EAAA,OAAA,EAAqE;AAAA,aACjDA,GAAD,CAAA,OAACA,IAAzB,EAD0E;AAAA,MACpE,WADoE,QACpE,WADoE;;AAE1E,SAAOC,WAAW,GACdC,OAAO,CAAPA,IAAAA,CACGC,UAAAA,MAAD;AAAA,WAAoBF,WAAW,CAAXA,WAAAA,OAA8BE,MAAM,CAF5C,WAEsCA,EAAlD;AAAA,GADFD,CADc,GAAlB,SAAA;AAKD","sourcesContent":["import { IncomingMessage } from 'http'\n\nexport function detectLocaleCookie(req: IncomingMessage, locales: string[]) {\n  const { NEXT_LOCALE } = (req as any).cookies || {}\n  return NEXT_LOCALE\n    ? locales.find(\n        (locale: string) => NEXT_LOCALE.toLowerCase() === locale.toLowerCase()\n      )\n    : undefined\n}\n"]},"metadata":{},"sourceType":"script"}