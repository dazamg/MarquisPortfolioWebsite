{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport const getPortfolio = url => {\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    async function getData() {\n      const res = await fetch(url);\n      const result = await res.json();\n\n      if (res.status !== 200) {\n        setError(result);\n      } else {\n        setData(result);\n      }\n\n      setLoading(false);\n      console.log(\"!@@@@@\", result);\n    }\n\n    url && getData();\n  }, []);\n  return {\n    data,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/kishonst.clair/Desktop/PortfolioWebsite/kishon-portfolio-website/functions/index.js"],"names":["useEffect","useState","getPortfolio","url","data","setData","error","setError","loading","setLoading","getData","res","fetch","result","json","status","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,YAAY,GAAIC,GAAD,IAAS;AACjC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,OAAf,GAAyB;AACrB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAD,CAAvB;AACA,YAAMU,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAArB;;AAEA,UAAGH,GAAG,CAACI,MAAJ,KAAe,GAAlB,EAAuB;AACnBR,QAAAA,QAAQ,CAACM,MAAD,CAAR;AACH,OAFD,MAEO;AACJR,QAAAA,OAAO,CAACQ,MAAD,CAAP;AACF;;AACDJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACH;;AACDV,IAAAA,GAAG,IAAIO,OAAO,EAAd;AACH,GAdQ,EAcN,EAdM,CAAT;AAeA,SAAO;AAAEN,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAP;AACH,CApBM","sourcesContent":["import  {useEffect, useState } from 'react';\n\nexport const getPortfolio = (url) => {\n    const [data, setData] = useState()\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        async function getData() {\n            const res = await fetch(url)\n            const result = await res.json();\n\n            if(res.status !== 200) {\n                setError(result)\n            } else {\n               setData(result) \n            }\n            setLoading(false)\n            console.log(\"!@@@@@\", result)\n        }\n        url && getData()\n    }, [])\n    return { data, error }\n}"]},"metadata":{},"sourceType":"module"}